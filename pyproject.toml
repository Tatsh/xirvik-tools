[tool.poetry]
authors = ["Fa An <2998784916@qq.com>"]
classifiers = ["Topic :: Software Development :: Libraries :: Python Modules"]
description = "Command line utilities for interfacing with Xirvik."
documentation = "https://xirvik-tools.readthedocs.io/"
homepage = "https://github.com/Tatsh/xirvik-tools"
include = ["LaunchAgents", "systemd"]
keywords = ["command line", "utilities", "xirvik"]
license = "MIT"
name = "xirvik-tools"
packages = [{ include = "xirvik" }]
readme = "README.md"
version = "0.4.1"

[tool.poetry.dependencies]
python = ">=3.10,<4"
beautifulsoup4 = "^4.12.1"
cached-property = "^1.5.2"
click = ">=8.0,<8.1.7"
html5lib = "^1.1"
loguru = "^0.7.0"
pyxdg = "^0.28"
pyyaml = "^6.0"
requests = "^2.31.0"
tabulate = "^0.9.0"
unidecode = "^1.3.6"
urllib3 = "^2.0.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.4.1"
pylint = "^2.17.4"
pylint-quotes = "^0.2.3"
rope = "^1.8.0"
toml = "^0.10.2"
types-beautifulsoup4 = "^4.12.0.5"
types-requests = "^2.31.0.1"
types-tabulate = "^0.9.0.2"
yapf = "^0.40.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
docutils = "^0.20.1"
esbonio = "^0.16.1"
sphinx = "^7.0.1"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
coveralls = "^3.3.1"
mock = "^5.0.2"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
requests-mock = "^1.11.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
xirvik = "xirvik.commands:xirvik"

[tool.isort]
case_sensitive = true
combine_as_imports = true
from_first = true
line_length = 100
order_by_type = true
use_parentheses = true

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
mypy_path = "./.stubs"
show_column_numbers = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.pylint.main]
ignore = [".git", "node_modules"]
load-plugins = [
  "pylint.extensions.bad_builtin",
  "pylint.extensions.check_elif",
  "pylint.extensions.code_style",
  "pylint.extensions.comparison_placement",
  "pylint.extensions.consider_refactoring_into_while_condition",
  "pylint.extensions.consider_ternary_expression",
  "pylint.extensions.docparams",
  "pylint.extensions.empty_comment",
  "pylint.extensions.eq_without_hash",
  "pylint.extensions.for_any_all",
  "pylint.extensions.magic_value",
  "pylint.extensions.overlapping_exceptions",
  "pylint.extensions.redefined_loop_name",
  "pylint.extensions.set_membership",
  "pylint_quotes"
]

[tool.pylint.basic]
class-attribute-naming-style = "snake_case"
good-names = [
  "_",
  "d",
  "e",
  "f",
  "fn",
  "g",
  "i",
  "id",
  "j",
  "k",
  "l",
  "m",
  "mc",
  "n",
  "p",
  "r",
  "ruTorrentClient",
  "t",
  "v",
  "w",
  "x",
  "y",
  "z",
]
include-naming-hint = true
inlinevar-naming-style = "snake_case"

[tool.pylint.design]
max-args = 8
max-branches = 15
max-locals = 30
max-statements = 80

[tool.pylint.format]
expected-line-ending-format = "LF"

[tool.pylint.logging]
logging-format-style = "old"
logging-modules = ["logging", "loguru"]

[tool.pylint."messages control"]
disable = [
  "duplicate-code",
  "magic-value-comparison",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "too-many-instance-attributes",
  "unspecified-encoding",
  "use-dict-literal"
]
enable = [
  "bad-builtin",
  "consider-refactoring-into-while-condition",
  "consider-ternary-expression",
  "consider-using-assignment-expr",
  "else-if-used",
  "empty-comment",
  "eq-without-hash",
  "misplaced-comparison-constant",
  "overlapping-except",
  "redefined-loop-name",
  "use-set-for-membership",
  "useless-type-doc"
]

[tool.pylint.parameter_documentation]
default-docstring-type = "numpy"

[tool.pylint.refactoring]
max-nested-blocks = 6

[tool.pytest.ini_options]
mock_use_standalone_module = true

[tool.rstcheck]
ignore_directives = "automodule"

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_dictionary_keys = false
allow_multiline_lambdas = false
allow_split_before_dict_value = true
blank_line_before_class_docstring = false
blank_line_before_module_docstring = false
blank_line_before_nested_class_or_def = false
blank_lines_around_top_level_definition = 2
coalesce_brackets = true
column_limit = 100
continuation_align_style = "SPACE"
continuation_indent_width = 4
dedent_closing_brackets = false
disable_ending_comma_heuristic = false
each_dict_entry_on_separate_line = true
indent_dictionary_value = true
indent_width = 4
join_multiple_lines = true
no_spaces_around_selected_binary_operators = false
space_between_ending_comma_and_closing_bracket = false
spaces_around_default_or_named_assign = false
spaces_around_power_operator = true
spaces_before_comment = 2
split_all_comma_separated_values = false
split_arguments_when_comma_terminated = false
split_before_bitwise_operator = true
split_before_closing_bracket = true
split_before_dict_set_generator = true
split_before_dot = false
split_before_expression_after_opening_paren = false
split_before_first_argument = false
split_before_logical_operator = true
split_before_named_assigns = true
split_complex_comprehension = false
split_penalty_after_opening_bracket = 30
split_penalty_after_unary_operator = 10000
split_penalty_before_if_expr = 0
split_penalty_bitwise_operator = 300
split_penalty_comprehension = 80
split_penalty_excess_character = 7000
split_penalty_for_added_line_split = 30
split_penalty_import_names = 0
split_penalty_logical_operator = 300
use_tabs = false
