#!/usr/bin/env python
from netrc import netrc
from os import listdir, remove as rm
from os.path import expanduser, join as path_join
import argparse
import logging
import sys

from osext.argparse_actions import ReadableDirectoryAction
import requests

if __name__ == '__main__':
    log = logging.getLogger('xirvik-start-torrents')
    parser = argparse.ArgumentParser()

    #parser.add_argument('-d', '--debug', action='store_true')
    #parser.add_argument('-v', '--verbose', action='store_true')
    parser.add_argument('-c', '--netrc-path', default=expanduser('~/.netrc'))
    #parser.add_argument('-C', '--client', default='rutorrent3')
    parser.add_argument('-H', '--host', nargs=1, required=True)
    parser.add_argument('-p', '--port', nargs=1, default=[443])
    parser.add_argument('--start-stopped', action='store_true')
    parser.add_argument('directory', metavar='DIRECTORY', action=ReadableDirectoryAction)

    args = parser.parse_args()
    user, _, password = netrc(args.netrc_path).authenticators(args.host[0])

    post_url = 'https://{host:s}:{port:d}/rtorrent/php/addtorrent.php?'.format(host=args.host[0], port=args.port[0])
    form_data = {}
    exceptions_caught = []

    # rtorrent2/3 params
    # dir_edit - ?
    # tadd_label - Label for the torrents, more param: label=
    # torrent_file - Torrent file blob data

    if args.start_stopped:
        form_data['torrents_start_stopped'] = 'on'

    for item in listdir(args.directory):
        if not item.lower().endswith('.torrent'):
            continue

        item = path_join(args.directory, item)

        with open(item, 'rb') as f:
            files = dict(torrent_file=f)
            log.info('Uploading torrent {0}'.format(item))
            r = requests.post(post_url, data=form_data, files=files)

            try:
                r.raise_for_status()
            except Exception as e:
                exceptions_caught.append(e)

        rm(item)

    if exceptions_caught:
        for e in exceptions_caught:
            print('Exceptions!', file=sys.stderr)
            print(vars(e), file=sys.stderr)
        sys.exit(1)
